[project]
name = "{{project_name}}"
version = "0.1.0"
description = "FastAPI application generated from Lantern template"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "httpx>=0.25.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "poethepoet>=0.24.0",
]


[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "httpx>=0.25.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "poethepoet>=0.24.0",
]

[tool.poe.tasks]
_compose = "docker compose up -d db"
test = "pytest --cov=todo-fastapi --cov-report=term-missing"
lint = "ruff check ."
dev.sequence = ["_compose", "_dev"]
dev.ignore_fail = true

[tool.poe.tasks._dev]
envfile = ".env"
shell = "uvicorn todo-fastapi.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug"


[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "W", "F", "I", "B", "C4", "ARG", "SIM"]
ignore = [
    "E501",  # Line too long, handled by ruff format
    "B008",  # Do not perform function calls in argument defaults
    "C901",  # Too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
