templates:
  - name: fastapi
    description: "FastAPI REST API application with Pydantic models, SQLAlchemy ORM, and modern Python tooling (uv, ruff)"
    language: python
    framework: fastapi
    features:
      - "FastAPI with async support"
      - "Pydantic v2 for data validation"
      - "SQLAlchemy 2.0 with async support"
      - "Database migrations with Alembic"
      - "Modern Python packaging with uv"
      - "Code formatting and linting with ruff"
      - "Health check endpoints"
      - "CRUD operations for users and items"
      - "Structured logging"
      - "CORS middleware"
    tags:
      - api
      - rest
      - python
      - fastapi
      - pydantic
      - sqlalchemy
      - async
    next_steps:
      - "uv sync"
      - "poe dev"
      - "# Visit http://127.0.0.1:8000/docs for API documentation"
      - "# Visit http://127.0.0.1:8000/health for health check"

  - name: django
    description: "Django 5 web application with REST API, modern Python tooling, and production-ready configuration"
    language: python
    framework: django
    features:
      - "Django 5 with async support"
      - "Django REST Framework with OpenAPI docs"
      - "Custom user model with authentication"
      - "PostgreSQL database with Redis caching"
      - "Celery for background tasks"
      - "Modern Python packaging with pyproject.toml"
      - "Code quality tools (ruff, mypy)"
      - "Comprehensive testing with pytest"
      - "Docker containerization"
      - "Structured settings for different environments"
      - "Production-ready security settings"
    tags:
      - web
      - api
      - python
      - django
      - rest
      - postgresql
      - redis
      - celery
      - docker
    next_steps:
      - "cp .env.example .env"
      - "pip install -e .[dev]"
      - "python manage.py migrate"
      - "python manage.py createsuperuser"
      - "python manage.py runserver"
      - "# Visit http://127.0.0.1:8000/api/docs/ for API documentation"
      - "# Visit http://127.0.0.1:8000/admin/ for Django admin"

  - name: rails
    description: "Ruby on Rails 7 API application with JWT authentication, comprehensive testing, and modern Ruby tooling"
    language: ruby
    framework: rails
    features:
      - "Rails 7 with API-only configuration"
      - "Devise authentication with JWT tokens"
      - "PostgreSQL database with Redis caching"
      - "Sidekiq for background job processing"
      - "Comprehensive RSpec test suite with FactoryBot"
      - "JSONAPI serialization for consistent responses"
      - "RuboCop with Rails, RSpec, and Performance cops"
      - "Security scanning with Brakeman"
      - "Docker containerization with multi-service setup"
      - "Health check and error handling endpoints"
      - "Structured logging and monitoring ready"
    tags:
      - api
      - rest
      - ruby
      - rails
      - jwt
      - postgresql
      - redis
      - sidekiq
      - rspec
      - docker
    next_steps:
      - "cp .env.example .env"
      - "bundle install"
      - "rails db:create db:migrate db:seed"
      - "rails server"
      - "# Visit http://127.0.0.1:3000/health for health check"
      - "# API documentation: POST /api/v1/auth/sign_up, /api/v1/users"