[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{project_name}}"
version = "0.1.0"
description = "Django 5 web application with modern tooling"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    "django>=5.0,<6.0",
    "django-environ>=0.11.0",
    "psycopg[binary]>=3.1.0",
    "redis>=5.0.0",
    "celery[redis]>=5.3.0",
    "gunicorn>=21.2.0",
    "whitenoise>=6.6.0",
    "django-cors-headers>=4.3.0",
    "djangorestframework>=3.14.0",
    "django-filter>=23.5",
    "drf-spectacular>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "django-stubs>=4.2.0",
    "djangorestframework-stubs>=3.14.0",
    "pytest>=7.4.0",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "coverage[toml]>=7.3.0",
    "django-debug-toolbar>=4.2.0",
    "ipdb>=0.13.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/{{project_name}}"
Repository = "https://github.com/yourusername/{{project_name}}"
Issues = "https://github.com/yourusername/{{project_name}}/issues"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "DJ",  # flake8-django
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise from
]

[tool.ruff.per-file-ignores]
"*/migrations/*.py" = ["E501", "DJ"]
"*/settings/*.py" = ["F405", "F403"]
"*/tests/*.py" = ["ARG", "B018"]

[tool.ruff.isort]
known-first-party = ["{{project_name}}"]
known-django = ["django"]
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "{{project_name}}.settings.development"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{project_name}}.settings.test"
addopts = "--cov={{project_name}} --cov-report=term-missing --cov-report=html --strict-markers --disable-warnings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["{{project_name}}"]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/tests/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]